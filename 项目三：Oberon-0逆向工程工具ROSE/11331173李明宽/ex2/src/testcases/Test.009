(* An Oberon-0 Program to provide three functions: 1-MaximumNum, 2-MinimumNum, 3-Factorial.*)
(* Mutant: Multiple lexical errors. *)
MODULE Test;
    CONST temp1 = \123;
        temp2 = 25id;
        temp3 = 123451234512345;
        temp4 = 0123456789;
        temp5 = 012345601234560123456;
    TYPE NUMBER = INTEGER;
    VAR firstnum, secondnum, choice : NUMBER;
      abcdabcdabcdabcdabcdabcdabcd: NUMBER;

    PROCEDURE MaximumNum (a, b: NUMBER);
        VAR max: NUMBER;
    BEGIN
        IF a >= b THEN
            max := a
        ELSE
            max := b
        END;
        Write(max); 
        WriteLn
    END MaximumNum;
    
    PROCEDURE MinimumNum (a, b: NUMBER);
        VAR min: NUMBER;
    BEGIN
        IF a <= b THEN
            min := a
        ELSE
            min := b
        END;
        Write(min); 
        WriteLn
    END MinimumNum;
    

    PROCEDURE Factorial (n: NUMBER);
        VAR i,j: NUMBER;
    BEGIN
        i := 1;
        j := 1;
        WHILE i <= n DO
            j := i * j;
            i := i + 1
        END;
    Write(j); 
    WriteLn
    END Factorial;
   
BEGIN
    Read(firstnum);
    Read(secondnum);
    Read(choice);
 
    IF choice = 1 THEN
        MaximumNum(firstnum, secondnum)
    ELSIF choice = 2 THEN
        MinimumNum(firstnum, secondnum)
    ELSE
        Factorial(firstnum);
        Factorial(secondnum)
    END;
END Test.
